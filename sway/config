# Initial Setup 
# exec ~/set_once.sh

# Config for sway
#
# Read `man 5 sway` for a complete reference.

# user config directory
include $HOME/.config/sway/config.d/*

# only enable this if every app you use is compatible with wayland
# xwayland disable

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# audio control
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $volume_down $(pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume)
set $volume_up $(pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume)
set $volume_mute $(pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p")
set $mic_mute $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p")

# Your preferred terminal emulators
set $term-float alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu wofi -c ~/.config/wofi/config -I
set $menu rofi -config ~/.config/rofi/config-wayland.rasi -show drun | xargs swaymsg exec --
# set $menu tofi-run | xargs swaymsg exec --

# set $powermenu ~/.config/waybar/scripts/power-menu.sh

# Pinentry, GPG
    # exec dbus-launch gpg -o /dev/null -s /etc/hostname
    # exec --no-startup-id gpgconf --launch gpg-agent
    # exec --no-startup-id gpgconf --launch dirmgr

### Idle configuration
# exec swayidle -w\
    # timeout 1070 'swaylock -f -C ~/.config/swaylock/config'\
    # timeout 770 'swaymsg "output * power off"' \
    # resume 'swaymsg "output * power on"' \
    # Rbefore-sleep 'swaylock -C ~/.config/swaylock/config'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

## Start autotiling in the beginning of session
exec --no-startup-id autotiling

## Lock Screen
bindsym $mod+f1 exec ~/.config/sway/scripts/lockman.sh

### Key bindings
# Basics:
    # Start a floating terminal
    bindsym $mod+Return exec $term-float

    # Open the power menu
    # bindsym $mod+Shift+e exec $powermenu
    bindsym $mod+Shift+e exec swaymsg exit

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    # bindsym $mod+d exec $menu
    bindsym $mod+d exec $menu

    # Activities
    # bindsym $mod+p exec ~/.config/wofi/windows.py

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

# Moving around:
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s floating toggle
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space layout stacking

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

# Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $right resize grow width 10px
    bindsym $up resize shrink height 10px
    bindsym $down resize grow height 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Right resize grow width 10px
    bindsym Up resize shrink height 10px
    bindsym Down resize grow height 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Resize floating windows with mouse scroll:
    bindsym --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
    bindsym --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
    bindsym --whole-window --border $mod+Shift+button4 resize shrink width 5 px or 5 ppt
    bindsym --whole-window --border $mod+Shift+button5 resize grow width 5 px or 5 ppt

# Volume
    # Control volume trough pamixer
    # bindsym --locked XF86AudioRaiseVolume exec pamixer -ui 2
    # bindsym --locked XF86AudioLowerVolume exec pamixer -ud 2
    # bindsym --locked XF86AudioMute exec pamixer -t
    
    # Control volume directly trough pactl
    # bindsym --locked XF86AudioRaiseVolume exec $volume_up
    # bindsym --locked XF86AudioLowerVolume exec $volume_down
    # bindsym --locked XF86AudioMute exec $volume_mute

# Player
    bindsym XF86AudioPlay exec playerctl play
    bindsym XF86AudioPause exec playerctl pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

# Backlight
    bindsym XF86MonBrightnessUp exec brightnessctl -c backlight set +5%
    bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%-

# App shortcuts
    bindsym $mod+n exec thunar
    bindsym $mod+o exec librewolf

# Screenshots
    bindsym print exec grimshot --notify save active "$HOME/Pictures/$(date --iso-8601=ns)-active.png"
    # bindsym Shift+print exec ~/.config/sway/scripts/screenshot.sh
    # Shift / Alt / Ctrl + FNScrinshot is not suported on the small-format keyboard, use META
    bindsym $mod+print exec grimshot --notify save screen "$HOME/Pictures/$(date --iso-8601=ns)-screen.png"

# Keybindings List
    # bindsym $mod+t exec xed ~/.config/sway/cheatsheet

# Clipboard
    # exec wl-paste -t text --watch clipman store

### Input configuration
# Example configuration:
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Put your touchpad's ID to replace "Touchpad-ID" (keep the quotation marks)

input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
}

# Read `man 5 sway-input` for more information about this section.
    # input type:keyboard xkb_layout "us"

# Update stuff in environment
    exec --no-startup-id dbus-update-activation-environment DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP WAYLAND_DISPLAY WAYLAND_SOCK=$SWAYSOCK
    # exec bash -c "export WAYLAND_SOCK=$SWAYSOCK && echo $WAYLAND_SOCK is set"
    exec --no-startup-id /usr/libexec/xdg-desktop-portal-gtk -r
    exec --no-startup-id /usr/libexec/xdg-desktop-portal-wlr -r

# KDE/GNOME User session and authorization
    exec --no-startup-id /usr/libexec/polkit-gnome-authentication-agent-1
    exec --no-startup-id /usr/bin/gnome-keyring-daemon --start --components=secrets
    # exec export $(gnome-keyring-daemon)
    exec --no-startup-id /lib64/libexec/pam_kwallet_init
    exec --no-startup-id /usr/lib64/libexec/kdeconnectd
    # exec --no-startup-id /usr/lib/polkit-kde-authentication-agent-1

# Audio
    exec --no-startup-id pipewire
    # exec --no-startup-id pipewire-pulse
    # exec --no-startup-id wireplumber

# Network and firewall (removed NetworkManager)
    # exec --no-startup-id firewalld

# Language - execute the server after sway started (placed to bashrc starter script)
    exec LD_LIBRARY_PATH=/usr/lib64 fcitx5 -dr --enable all
    exec LD_LIBRARY_PATH=/usr/lib64 ibus-daemon -drx --panel=disabled
    # exec LD_LIBRARY_PATH=/usr/lib64 /usr/libexec/fcitx5-wayland-launcher
    # exec LD_LIBRARY_PATH=/usr/lib64 /usr/libexec/ibus-wayland
    # exec --no-startup-id ~/.config/sway/scripts/language-start.sh
    # bindsym $mod+f2 exec ~/.config/sway/scripts/language.sh
